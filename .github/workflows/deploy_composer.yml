name: "Deploy Composer"

on:
 push:
  branches:
  - master
  - production

jobs:
  linter:
    uses: ./.github/workflows/reusable_linter.yml
    with:
     NOTIF_CHANNEL_ID: ${{ vars.DEFAULT_NOTIF_CHANNEL_ID }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  find-test-jobs:
    outputs:
      jobs: ${{ steps.find-testable-jobs.outputs.testable_jobs }}
    runs-on: [self-hosted, linux, x64]
    steps:
     - uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - name: Trouver les Jobs testables
       id: find-testable-jobs
       run: |
         find jobs -type d  -name "tests" -exec dirname {} \; > /tmp/list.txt
         folders=()
         for folder in $(cat /tmp/list.txt); do
           folders+=(\"${folder}\")
         done
         json_array="[$(IFS=,; echo "${folders[*]}")]"
         echo "testable_jobs=$json_array" | tee -a $GITHUB_OUTPUT

  test-jobs:
   if: ${{ needs.find-test-jobs.outputs.jobs != '' && toJson(fromJson(needs.find-test-jobs.outputs.jobs)) != '[]' }}
   uses: ./.github/workflows/reusable_job_test.yml
   secrets:
     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
   needs:
     - find-test-jobs
   strategy:
     fail-fast: false
     matrix:
       job: ${{ fromJSON(needs.find-test-jobs.outputs.jobs) }}
   with:
     JOB_PATH: ${{ matrix.job }}
     NOTIF_CHANNEL_ID: ${{ vars.DEFAULT_NOTIF_CHANNEL_ID }}
  
  test-orchestration:
    uses: ./.github/workflows/reusable_test_orchestration.yml
    with:
      NOTIF_CHANNEL_ID: ${{ vars.DEFAULT_NOTIF_CHANNEL_ID }}
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  composer-deploy-on-dev:
    if: github.ref == 'refs/heads/production'
    uses: ./.github/workflows/reusable_deploy_composer.yml
    needs: 
      - test-orchestration
      - test-jobs
      - linter
    with:
      TARGET_ENV:  "dev"
      COMPOSER_DAGS_BUCKET: "europe-west1-data-composer--a3134989-bucket"
      COMPOSER_ENVIRONMENT_NAME: "data-composer-dev"
      DATA_GCP_PROJECT: "passculture-data-ehp"
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  composer-deploy-on-stg:
    if: github.ref == 'refs/heads/master'
    uses: ./.github/workflows/reusable_deploy_composer.yml
    needs: 
      - test-orchestration
      - test-jobs
      - linter
    with:
      TARGET_ENV:  "staging"
      COMPOSER_DAGS_BUCKET: "europe-west1-data-composer--00137508-bucket"
      COMPOSER_ENVIRONMENT_NAME: "data-composer-stg"
      DATA_GCP_PROJECT: "passculture-data-ehp"
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  composer-deploy-on-prod:
    if: github.ref == 'refs/heads/production'
    uses: ./.github/workflows/reusable_deploy_composer.yml
    needs: 
      - test-orchestration
      - test-jobs
      - linter
      - composer-deploy-on-dev
    with:
      TARGET_ENV:  "production"
      COMPOSER_DAGS_BUCKET: "europe-west1-data-composer--d5adf2e8-bucket"
      COMPOSER_ENVIRONMENT_NAME: "data-composer-prod"
      DATA_GCP_PROJECT: "passculture-data-prod"
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
