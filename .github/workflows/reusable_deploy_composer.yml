name: "Deploy Composer"

run-name: "Deploy Composer on ${{ github.event.inputs.TARGET_ENV }}"

on:
  workflow_call:
    inputs:
      DATA_GCP_PROJECT:
        type: string
        required: true
      COMPOSER_DAGS_BUCKET:
        type: string
        required: true
      COMPOSER_ENVIRONMENT_NAME:
        type: string
        required: true
      TARGET_ENV:
        type: string
        required: true
      NOTIF_CHANNEL_ID:
        type: string
        required: false # Si pas fourni, alors pas de notif
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT:
        required: true
      SLACK_BOT_TOKEN:
        required: true

env:
  GCP_REGION: "europe-west1"

jobs:
  composer-deploy:
    permissions:
      id-token: write
      contents: write
    container: google/cloud-sdk:448.0.0
    runs-on: [self-hosted, linux, x64]
    environment: ${{ inputs.TARGET_ENV }}
    defaults:
     run: 
       working-directory: "./orchestration/"
    steps:
      - uses: actions/checkout@v4
      - id: auth
        name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          create_credentials_file: true
          project_id: ${{ inputs.DATA_GCP_PROJECT }}
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: Deploy composer
        run: |
              gsutil -m rm -r gs://${{ inputs.COMPOSER_DAGS_BUCKET }}/dags
              gsutil -m cp -r dags gs://${{ inputs.COMPOSER_DAGS_BUCKET }}
      - name: Wait for composer to be deployed (10s x 6 times)
        run: |
               ./wait_for_dag_deployed.sh ${{ inputs.COMPOSER_ENVIRONMENT_NAME }} ${{ env.GCP_REGION }} airflow_monitoring 6 10 ${{ inputs.DATA_GCP_PROJECT }}
      - name: Post to a Slack channel
        id: slack
        if: ${{ inputs.NOTIF_CHANNEL_ID != '' && always() }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ inputs.NOTIF_CHANNEL_ID }}
          payload: |
            {
                    "attachments": [
                        {
                            "mrkdwn_in": ["text"],
                            "color": "${{ fromJSON('["#36a64f", "#A30002"]')[job.status != 'success'] }}",
                            "author_name": "${{github.actor}}",
                            "author_link": "https://github.com/${{github.actor}}",
                            "author_icon": "https://github.com/${{github.actor}}.png",
                            "title": "Composer déployé",
                            "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                            "text": "Composer a été déployé sur l'environnement ${{ inputs.COMPOSER_ENVIRONMENT_NAME }}"
                        }
                    ],
                    "unfurl_links": false,
                    "unfurl_media": false
            }
    env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
