name: "Deploy Composer"

run-name: "Deploy Composer on ${{ github.event.inputs.GITHUB_ENV_NAME }}"

on:
  workflow_call:
    inputs:
      DATA_GCP_PROJECT:
        type: string
        required: true
      COMPOSER_DAGS_BUCKET:
        type: string
        required: true
      COMPOSER_NAME:
        type: string
        required: true
      GITHUB_ENV_NAME:
        type: string
        required: true
      ENV_SHORT_NAME:
        type: string
        required: true
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        required: true

env:
  GCP_REGION: "europe-west1"

jobs:
  composer-deploy:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENV_NAME }}
    defaults:
     run: 
       working-directory: "./orchestration/"
    steps:
      - uses: actions/checkout@v4
      - name: "Connect to Secret Manager"
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get secrets for Slack"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token
            ARTIFACT_REGISTRY_SERVICE_ACCOUNT:passculture-metier-ehp/passculture-main-artifact-registry-service-account
            ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER:passculture-metier-ehp/infra-prod-gcp-workload-identity-provider
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: yezz123/setup-uv@v4
      - name: "Install Python requirements"
        run: |
          uv pip install --system -r airflow/orchestration-requirements.txt
      - id: auth
        name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          create_credentials_file: true
          project_id: ${{ inputs.DATA_GCP_PROJECT }}
          token_format: "access_token"
          workload_identity_provider: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: "Install dbt dependencies"
        working-directory: "./orchestration/dags/data_gcp_dbt/"
        env:
          DBT_TARGET_PATH: "target/"
          DBT_PROFILES_DIR: "."
        run: |
          export PYTHONPATH=$PYTHONPATH:./dags
          dbt deps 
      - name: "deploy dbt dependencies"
        working-directory: "./orchestration/dags/data_gcp_dbt/"
        env:
          COMPOSER_DAGS_BUCKET: ${{ inputs.COMPOSER_DAGS_BUCKET }}
        run: |
          gsutil -m rm -r  gs://${{ inputs.COMPOSER_DAGS_BUCKET }}/data/target/dbt_packages
          gsutil -m cp -r target/dbt_packages gs://${{ inputs.COMPOSER_DAGS_BUCKET }}/data/target
      - name: "compile dbt project"
        working-directory: "./orchestration/dags/data_gcp_dbt/"
        env:
          DBT_TARGET_PATH: "target/"
          DBT_PROFILES_DIR: "."
          ENV_SHORT_NAME: ${{ inputs.ENV_SHORT_NAME }}
        run: dbt compile --target $ENV_SHORT_NAME
      # - name: "Push manifest"
      #   working-directory: "./orchestration/dags/data_gcp_dbt/"
      #   env:
      #     COMPOSER_DAGS_BUCKET: ${{ inputs.COMPOSER_DAGS_BUCKET }}
      #   run: |
      #     gsutil rm  gs://${{ inputs.COMPOSER_DAGS_BUCKET }}/data/target/manifest.json
      #     gsutil cp target/manifest.json gs://$COMPOSER_DAGS_BUCKET/data/target/manifest.json
      # - name: "Deploy composer"
      #   run: |
      #     gsutil -m rm -r gs://${{ inputs.COMPOSER_DAGS_BUCKET }}/dags
      #     gsutil -m cp -r dags gs://${{ inputs.COMPOSER_DAGS_BUCKET }}
      # - name: "Wait for composer to be deployed (10s x 6 times)"
      #   run: |
      #     ./wait_for_dag_deployed.sh ${{ inputs.COMPOSER_NAME }} ${{ env.GCP_REGION }} airflow_monitoring 6 10 ${{ inputs.DATA_GCP_PROJECT }}
      # - name: "Post to a Slack channel"
      #   if: always()
      #   uses: slackapi/slack-github-action@v1.23.0
      #   env:
      #     SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
      #   with:
      #     channel-id: ${{ vars.NOTIF_CHANNEL_ID }}
      #     payload: |
      #       {
      #         "attachments": [
      #           {
      #             "mrkdwn_in": ["text"],
      #             "color": "${{ fromJSON('["#36a64f", "#A30002"]')[job.status != 'success'] }}",
      #             "author_name": "${{github.actor}}",
      #             "author_link": "https://github.com/${{github.actor}}",
      #             "author_icon": "https://github.com/${{github.actor}}.png",
      #             "title": "Composer déployé",
      #             "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
      #             "text": "Composer a été déployé sur l'environnement ${{ inputs.COMPOSER_NAME }}"
      #           }
      #         ],
      #         "unfurl_links": false,
      #         "unfurl_media": false
      #       }
