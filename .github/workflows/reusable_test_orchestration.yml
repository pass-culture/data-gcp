name: "Test Orchestration"

on:
  workflow_call:
    inputs:
      NOTIF_CHANNEL_ID:
        type: string
        required: false # Si pas fourni, alors pas de notif
    secrets:
      GCP_EHP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      GCP_EHP_SERVICE_ACCOUNT:
        required: true

jobs:
  test-orchestration:
    name: "Test Orchestration"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    defaults:
      run:
        working-directory: "./orchestration/"
    env:
      AIRFLOW_HOME: "${{ github.workspace }}/orchestration/"
      DAG_FOLDER: "./dags"
      RECOMMENDATION_SQL_INSTANCE: "cloudsql-recommendation-circleci"
      RECOMMENDATION_SQL_BASE: "cloudsql-recommendation-circleci"
    steps:
      - uses: actions/checkout@v4
      - name: "Connect to Secret Manager"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: "Get secrets for Slack"
        id: "secrets"
        uses: "google-github-actions/get-secretmanager-secrets@v2"
        with:
          secrets: |-
            SLACK_BOT_TOKEN:passculture-metier-ehp/passculture-ci-slack-bot-token
            ARTIFACT_REGISTRY_SERVICE_ACCOUNT:passculture-metier-ehp/passculture-main-artifact-registry-service-account
            ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER:passculture-metier-ehp/infra-prod-gcp-workload-identity-provider
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: yezz123/setup-uv@v4
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true
      - name: "Install Python requirements"
        run: uv pip install --system  -r airflow/orchestration-requirements.txt
      - name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          create_credentials_file: true
          token_format: "access_token"
          workload_identity_provider: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.secrets.outputs.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      - name: "Run tests"
        env:
          GCP_PROJECT: "passculture-data-ehp"
          GOOGLE_CLOUD_PROJECT: "passculture-data-ehp"
          GCLOUD_PROJECT: "passculture-data-ehp"
        run: |
          export PYTHONPATH=$PYTHONPATH:./dags
          airflow db migrate
          pytest tests
      - name: "Post to a Slack channel"
        if: ${{ inputs.NOTIF_CHANNEL_ID != '' && failure() }}
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ inputs.NOTIF_CHANNEL_ID }}
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "#A30002",
                  "author_name": "${{github.actor}}",
                  "author_link": "https://github.com/${{github.actor}}",
                  "author_icon": "https://github.com/${{github.actor}}.png",
                  "title": "Tests Orchestration",
                  "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "text": "Les tests d'orchestration ont échoués"
                }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
