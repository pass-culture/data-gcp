[project]
name = "tiktok-etl"
version = "0.1.0"
description = "TikTok ETL job for extracting analytics data"
requires-python = ">=3.10"
dependencies = [
    "google-auth-oauthlib==1.2.0",
    "google-cloud-bigquery==3.24.0",
    "google-cloud-bigquery-storage==2.25.0",
    "google-cloud-core==2.4.1",
    "google-cloud-secret-manager==2.20.0",
    "google-cloud-storage==2.17.0",
    "numpy==1.26.4",
    "pandas==2.0.3",
    "requests==2.32.3",
    "pandas-gbq==0.23.1",
    "gspread==6.0.0",
    "typer>=0.7.0",
    "urllib3>=2.0.0",
    "loguru>=0.7.0",
]

[tool.ruff]
target-version = 'py310'

lint.select = ["E4", "E7", "E9", "F", "I"]
# TARGET : lint.select = [
#     "E",      # pycodestyle
#     "W",      # pycodestyle
#     "F",      # Pyflakes
#     "B",      # flake8-bugbear
#     "C4",     # flake8-comprehensions
#     "I",      # isort
#     "SIM",    # flake8-simplify
#     "TCH",    # flake8-type-checking
#     "TID",    # flake8-tidy-imports
#     "UP",     # pyupgrade
#     "PT",     # flake8-pytest-style
#     "RUF",    # Ruff-specific rules
#     "FBT001", # flake8-boolean-trap
# ]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
