[project]
name = "sync-recommendation"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiofiles==24.1.0",
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.11.14",
    "aiosignal==1.3.2",
    "asn1crypto==1.5.1",
    "attrs==25.3.0",
    "cachetools==5.5.2",
    "certifi==2025.1.31",
    "cffi==1.17.1",
    "charset-normalizer==3.4.1",
    "click==8.1.8",
    "cloud-sql-python-connector==1.17.0",
    "cryptography==44.0.2",
    "dnspython==2.7.0",
    "duckdb==1.2.1",
    "frozenlist==1.5.0",
    "google-api-core==2.24.2",
    "google-api-python-client==2.164.0",
    "google-auth==2.38.0",
    "google-auth-httplib2==0.2.0",
    "google-cloud-bigquery==3.30.0",
    "google-cloud-core==2.4.3",
    "google-cloud-secret-manager==2.23.2",
    "google-cloud-storage==3.1.0",
    "google-crc32c==1.6.0",
    "google-resumable-media==2.7.2",
    "googleapis-common-protos==1.69.2",
    "grpc-google-iam-v1==0.14.2",
    "grpcio==1.71.0",
    "grpcio-status==1.71.0",
    "httplib2==0.22.0",
    "idna==3.10",
    "jinja2==3.1.6",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mdurl==0.1.2",
    "multidict==6.1.0",
    "oauth2client==4.1.3",
    "packaging==24.2",
    "pg8000==1.31.2",
    "propcache==0.3.0",
    "proto-plus==1.26.1",
    "protobuf==5.29.3",
    "psycopg2-binary==2.9.10",
    "pyarrow==19.0.1",
    "pyasn1==0.6.1",
    "pyasn1-modules==0.4.1",
    "pycparser==2.22",
    "pygments==2.19.1",
    "pyparsing==3.2.1",
    "python-dateutil==2.9.0.post0",
    "requests==2.32.3",
    "rich==13.9.4",
    "rsa==4.9",
    "scramp==1.4.5",
    "shellingham==1.5.4",
    "six==1.17.0",
    "tenacity==9.0.0",
    "typer==0.15.2",
    "typing-extensions==4.12.2",
    "uritemplate==4.1.1",
    "urllib3==2.3.0",
    "yarl==1.18.3",
]

## ruff
# Recommended ruff config for now, to be updated as we go along.
[tool.ruff]
target-version = 'py312'

lint.select = ["E4", "E7", "E9", "F", "I"]
# TARGET : lint.select = [
#     "E",      # pycodestyle
#     "W",      # pycodestyle
#     "F",      # Pyflakes
#     "B",      # flake8-bugbear
#     "C4",     # flake8-comprehensions
#     "I",      # isort
#     "SIM",    # flake8-simplify
#     "TCH",    # flake8-type-checking
#     "TID",    # flake8-tidy-imports
#     "UP",     # pyupgrade
#     "PT",     # flake8-pytest-style
#     "RUF",    # Ruff-specific rules
#     "FBT001", # flake8-boolean-trap
# ]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
