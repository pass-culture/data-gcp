[project]
name = "clusterisation"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "async-timeout==4.0.3",
    "bertopic[spacy]>=0.16.2",
    "exceptiongroup==1.2.2",
    "gcsfs==2023.5.0",
    "google-cloud-bigquery>=3.12.0",
    "google-cloud-secret-manager>=2.2.0",
    "hdbscan>=0.8.28",
    "loguru==0.7.0",
    "numba>=0.60.0",
    "numpy==1.26.4",
    "openai>=1.35.10",
    "pandas==1.4.1",
    "pandas-gbq>=0.17.1",
    "polars==0.19.12",
    "polyfuzz>=0.4.2",
    "pyarrow==13.0.0",
    "pynndescent>=0.5.13",
    "scipy==1.13",
    "setuptools==78.1.1",
    "tensorflow>=2.16.2",
    "timeout-decorator>=0.5.0",
    "torch==2.6.0",
    "tqdm==4.66.1",
    "typer==0.7.0",
    "umap-learn[parametric-umap]>=0.5.3",
    "h11>=0.16.0",
]
[tool.uv]
environments = [
    "sys_platform == 'darwin'",
    "sys_platform == 'linux'",
]
## ruff
# Recommended ruff config for now, to be updated as we go along.
[tool.ruff]
target-version = 'py310'

lint.select = ["E4", "E7", "E9", "F", "I"]
# TARGET : lint.select = [
#     "E",      # pycodestyle
#     "W",      # pycodestyle
#     "F",      # Pyflakes
#     "B",      # flake8-bugbear
#     "C4",     # flake8-comprehensions
#     "I",      # isort
#     "SIM",    # flake8-simplify
#     "TCH",    # flake8-type-checking
#     "TID",    # flake8-tidy-imports
#     "UP",     # pyupgrade
#     "PT",     # flake8-pytest-style
#     "RUF",    # Ruff-specific rules
#     "FBT001", # flake8-boolean-trap
# ]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
