[project]
name = "graph-recommendation"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
  "google-cloud-storage>=2.16.0",
  "ipykernel>=6.30.1",
  "matplotlib>=3.10.6",
  "pandas>=2.2.0",
  "pyarrow>=16.1.0",
  "pytest>=8.2.2",
  "pyvis>=0.3.2",
  "ruff>=0.13.2",
  "scipy>=1.15.0",
  "streamlit>=1.35.0",
  "torch>=2.8.0",
  "torch-geometric>=2.6.1",
  "tornado>=6.4.2",
  "typer>=0.12.3",
  "numpy>=2.0.0",
  "loguru>=0.7.3",
  "lancedb>=0.25.1",
  "pydantic>=2.11.10",
  "gcsfs>=2025.9.0",
  "recommenders>=1.2.1",
  "mlflow>=3.5.1",
  "google-auth>=2.41.1",
  "google-cloud>=0.34.0",
  "google-cloud-secret-manager>=2.25.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src", "scripts"]

[project.scripts]
cli = "scripts.cli:app"

[tool.uv.sources]
torch = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
  { index = "pytorch-cpu", marker = "sys_platform != 'linux'" },
]


[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true


## ruff
# Recommended ruff config for now, to be updated as we go along.
[tool.ruff]
target-version = 'py312'

lint.select = [
  "E",      # pycodestyle
  "W",      # pycodestyle
  "F",      # Pyflakes
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "I",      # isort
  "SIM",    # flake8-simplify
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "PT",     # flake8-pytest-style
  "RUF",    # Ruff-specific rules
  "FBT001", # flake8-boolean-trap
]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
