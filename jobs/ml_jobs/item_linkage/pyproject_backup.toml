[project]
name = "item-linkage"
version = "0.1.0"
requires-python = ">=3.10"
dependencies = [
    "async-timeout==4.0.3",
    "docarray==0.21.0",
    "gcsfs>=2023.1.0",
    "google-cloud-bigquery[pandas]>=3.25.0",
    "google-cloud-secret-manager==2.20.0",
    "hnne==0.1.10",
    "lancedb==0.18.0",
    "loguru==0.6.0",
    "matplotlib>=3.9.1",
    "mlflow==2.20.1",
    "networkx==3.3",
    "numpy==1.26.0",
    "pandas==2.2.2",
    "pandas-gbq==0.23.1",
    "polars==0.18.6",
    "recordlinkage==0.16",
    "seaborn>=0.13.2",
    "sentence-transformers==3.3.1",
    "setuptools==78.1.1",
    "streamlit==1.35.0",
    "torch==2.6.0",
    "tornado==6.4.2",
    "tqdm==4.64.1",
    "typer==0.7.0",
]

## ruff
# Recommended ruff config for now, to be updated as we go along.
[tool.ruff]
target-version = 'py310'

lint.select = ["E4", "E7", "E9", "F", "I"]
# TARGET : lint.select = [
#     "E",      # pycodestyle
#     "W",      # pycodestyle
#     "F",      # Pyflakes
#     "B",      # flake8-bugbear
#     "C4",     # flake8-comprehensions
#     "I",      # isort
#     "SIM",    # flake8-simplify
#     "TCH",    # flake8-type-checking
#     "TID",    # flake8-tidy-imports
#     "UP",     # pyupgrade
#     "PT",     # flake8-pytest-style
#     "RUF",    # Ruff-specific rules
#     "FBT001", # flake8-boolean-trap
# ]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
