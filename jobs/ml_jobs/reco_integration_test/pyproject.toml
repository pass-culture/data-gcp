[project]
name = "reco-integration-test"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "google-cloud-storage==2.16.0",
    "google-cloud-aiplatform>=1.22.0",
    "google-cloud-secret-manager>=2.4.0",
    "ipykernel>=6.30.0",
    "pandas==2.2.0",
    "pyarrow==13.0.0",
    "pytest==8.2.2",
    "ruff>=0.12.4",
    "streamlit==1.35.0",
    "tornado==6.4.2",
    "typer==0.12.3",
    "tensorflow==2.14.0",
    "keras==2.14.0",
    "mlflow==2.20.1",
    "numpy==1.26.4",
    "pandas>=1.5.3",
    "db-dtypes==1.4.3",
]

[tool.setuptools]
packages = ["sql", "streamlits"]

## ruff
# Recommended ruff config for now, to be updated as we go along.
[tool.ruff]
target-version = 'py312'

lint.select = [
    "E",      # pycodestyle
    "W",      # pycodestyle
    "F",      # Pyflakes
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "I",      # isort
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "PT",     # flake8-pytest-style
    "RUF",    # Ruff-specific rules
    "FBT001", # flake8-boolean-trap
]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
