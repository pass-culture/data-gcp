name: 'data_gcp_dbt'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'data_gcp_dbt'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: [ "models" ]
analysis-paths: [ "analyses" ]
test-paths: [ "tests" ]
seed-paths: [ "seeds" ]
macro-paths: [ "macros" ]
snapshot-paths: [ "snapshots" ]

target-path: "{{ env_var('DBT_TARGET_PATH', 'target') }}"

# If you wish to write dbt artifacts to a custom directory, please use the --target-path CLI flag or DBT_TARGET_PATH env var instead.
packages-install-path: "{{ env_var('DBT_TARGET_PATH', 'target') }}/dbt_packages"
# directories to be removed by `dbt clean`
clean-targets:
  - "{{ env_var('DBT_TARGET_PATH', 'target') }}"

models:
  data_gcp_dbt:
    +labels:
      schedule: "daily"
    +persist_docs:
      relation: true
      columns: true
    clean:
      +meta:
        owner: "@team-data-engineering"
      +materialized: "{{ var('CI_MATERIALIZATION', 'table') }}"
      +schema: clean_{{ target.name }}
      +docs:
        node_color: "#b43ddb"
      applicative:
        +alias: applicative_database_
        +materialized: "{{ var('CI_MATERIALIZATION', 'table') }}"
    analytics:
      +meta:
        owner: "@team-data-analytics"
      +materialized: "{{ var('CI_MATERIALIZATION', 'table') }}"
      +schema: analytics_{{ target.name }}
      +re_data_monitored: true
      +re_data_anomaly_detector:
        name: modified_z_score
        threshold: 3
      +re_data_metrics_groups:
        - table_metrics
        - column_metrics
      +docs:
        node_color: "#d90000"
    intermediate:
      +meta:
        owner: "@team-data-engineering"
      +materialized: "{{ var('CI_MATERIALIZATION', 'view') }}"
      global:
        +materialized: "{{ var('CI_MATERIALIZATION', 'table') }}"
    mart:
      +meta:
        owner: "@team-data-analytics"
      +materialized: "{{ var('CI_MATERIALIZATION', 'table') }}"
      +schema: analytics_{{ target.name }}
      monitoring:
        +meta:
          owner: "@team-data-engineering"
    export:
      +schema: export_{{ target.name }}
      +materialized: "{{ var('CI_MATERIALIZATION', 'view') }}"
      +meta:
        owner: "@team-data-engineering"
      backend:
        +schema: backend_{{ target.name }}
        +materialized: "{{ var('CI_MATERIALIZATION', 'table') }}"
    machine_learning:
      +materialized: "{{ var('CI_MATERIALIZATION', 'table') }}"
      +meta:
        owner: "@team-data-science"

  elementary:
    +on_schema_change: "append_new_columns"
    +enabled: false
  re_data:
    +enabled: false

seeds:
  +schema: seeds
  +docs:
    node_color: "#000000"
snapshots:
  +target_schema: snapshot_{{ target.name }}
  +docs:
    show: false
  data_gcp_dbt:
    applicative:
      tags: applicative_history
tests:
  +store_failures: true  # store failures for all tests
  +severity: "{{ var('CI_SEVERITY', 'warn') }}" # Failing tests will generate a warning by default. To raise an error, overwrite a config with severity: error.
  +docs:
    show: true
    tags: "test"


vars:
  ENV_SHORT_NAME: dev
  re_data:save_test_history: true
  CI_MATERIALIZATION: none
  CI_SEVERITY: none
  region_name: region-europe-west1
