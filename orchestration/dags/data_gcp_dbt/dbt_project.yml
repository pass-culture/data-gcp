name: 'data_gcp_dbt'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'data_gcp_dbt'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "{{ env_var('DBT_TARGET_PATH', 'target') }}" # directory which will store compiled SQL files


# The `target-path` config in `dbt_project.yml` has been deprecated, and will no longer be supported in a future version of dbt-core.
# If you wish to write dbt artifacts to a custom directory, please use the --target-path CLI flag or DBT_TARGET_PATH env var instead.
packages-install-path: "{{ env_var('DBT_TARGET_PATH', 'target') }}/dbt_packages"

clean-targets:         # directories to be removed by `dbt clean`
  - "{{ env_var('DBT_TARGET_PATH', 'target') }}"

models:
  data_gcp_dbt:
    clean:
      +config:
        +meta:
          owner: "@team-data-engineering"
      +materialized: table
      +schema: clean_dbt_{{ target.name }}
      +docs: 
        node_color: "#b43ddb"
      applicative: 
        +alias: applicative_database_
        +materialized: table
      applicative_history:
        +alias: applicative_database_
        +materialized: incremental
        +partition_by: {'field': 'partition_date', 'data_type': 'date'}
        +cluster_by: ['partition_date']  
        +incremental_strategy: insert_overwrite
    analytics:
      +materialized: table
      +schema: analytics_dbt_{{ target.name }}
      +re_data_monitored: true
      +re_data_anomaly_detector:
        name: modified_z_score
        threshold: 3
      +re_data_metrics_groups:
        - table_metrics
        - column_metrics
      +docs: 
        node_color: "#d90000" 
      diversification:
        +tags: sandbox
        +re_data_monitored: false
  elementary:
    +on_schema_change: "append_new_columns"
    +enabled: false
  re_data:
    +enabled: false

seeds:
  +schema: seeds
  +docs:
    node_color: "#000000"
snapshots:
  +target_schema: snapshots
  +docs:
    show: false
  data_gcp_dbt:
    applicative_history:
      tags: applicative_history
tests:
  # +store_failures: true  # store failures for all tests
  +severity: warn # Failing tests will generate a warning by default. To raise an error, overwrite a config with severity: error.  
  +docs:
    show: true
    tags: "test"


vars:
  ENV_SHORT_NAME: dev
  re_data:save_test_history: true
