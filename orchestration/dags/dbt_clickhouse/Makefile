# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Configuration
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

# Detect userâ€™s login shell for interactive alias loading
USER_SHELL   := $(shell echo $$SHELL)

# Python version
PYTHON_VERSION := python3.11

# Virtualenv and env file
VENV_DIR     := .dbt_clickhouse_env
ENV_FILE     := .env.local

# Path to the venvâ€™s activate script
ACTIVATE     := $(VENV_DIR)/bin/activate

# Where weâ€™ll store the port-forward PID
PID_FILE     := .clickhouse_portforward.pid


.PHONY: init patch_activate setup clickhouse_connect clickhouse_disconnect
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Helpers
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

# Append env-sourcing snippet
patch_activate:
	@echo "ðŸ”§ Ensuring $(ACTIVATE) auto-loads $(ENV_FILE)â€¦"
	@if ! grep -q "# >>> load project $(ENV_FILE)" $(ACTIVATE); then \
	  echo '' >> $(ACTIVATE); \
	  echo '# >>> load project $(ENV_FILE) >>>' >> $(ACTIVATE); \
	  echo 'if [ -f "$$VIRTUAL_ENV/../$(ENV_FILE)" ]; then' >> $(ACTIVATE); \
	  echo '  set -o allexport' >> $(ACTIVATE); \
	  echo '  . "$$VIRTUAL_ENV/../$(ENV_FILE)"' >> $(ACTIVATE); \
	  echo '  set +o allexport' >> $(ACTIVATE); \
	  echo 'fi' >> $(ACTIVATE); \
	  echo '# <<< end project $(ENV_FILE) <<<' >> $(ACTIVATE); \
	  echo "âœ” Patched $(ACTIVATE)"; \
	else \
	  echo "âœ” $(ACTIVATE) already patched"; \
	fi
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Setup
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
init:
	@echo "ðŸ›   Bootstrapping .env and virtualenv"
	@cp -n .env.template $(ENV_FILE) || true
	@echo "âž¤ Make sure to fill in the .env.local file using values from gcp secret manager"

setup:
	@echo "âž¤ Creating venv at $(VENV_DIR)"
	@uv venv $(VENV_DIR) --python=$(PYTHON_VERSION)
	@echo "ðŸ›   Bootstrapping .env.local env variables into virtualenv"
	make patch_activate
	@echo "âž¤ Installing dependencies inside venv"
	@$(USER_SHELL) -ic '\
		source "$(ACTIVATE)" && \
		uv pip install -r requirements.txt \
	'

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# ClickHouse Tunnel
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

connect_clickhouse:
	@echo "ðŸ”— Setting up proxy & contextâ€¦"
	@$(USER_SHELL) -ic "ctxdataehp"
	@kubens clickhouse-dev
	@echo "ðŸ”Œ Port-forwarding svc/clickhouse-svc â†’ localhost:8123"
	@kubectl port-forward svc/clickhouse-svc 8123:8123 \
		> /dev/null 2>&1 & \
		echo $$! > $(PID_FILE)
	@echo "âœ” Tunnel PID: $$(cat $(PID_FILE))"
	@echo "âžœ Remember to activate your venv: source $(ACTIVATE)"

disconnect_clickhouse:
	@echo "ðŸ›‘ Tearing down ClickHouse tunnelâ€¦"
	@if [ -f $(PID_FILE) ]; then \
		kill $$(cat $(PID_FILE)) && rm -f $(PID_FILE); \
		echo "âœ” Disconnected"; \
	else \
		echo "âš  No PID file â€“ nothing to kill"; \
	fi
