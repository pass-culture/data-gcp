volumes:
  postgres-db-volume:


x-airflow-common: &airflow-common
  environment: &airflow-common-env
    LOCAL_ENV: ${LOCAL_ENV:-1}
    GOOGLE_CLOUD_PROJECT: ${GOOGLE_CLOUD_PROJECT:-}
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY:-}
    AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT: ${AIRFLOW_CONN_GOOGLE_CLOUD_DEFAULT:-}
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY:-}
    ENV_SHORT_NAME: ${ENV_SHORT_NAME:-}
    APPLICATIVE_EXTERNAL_CONNECTION_ID: ${APPLICATIVE_EXTERNAL_CONNECTION_ID:-}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - ./airflow/config/airflow.cfg:/opt/airflow/airflow.cfg
    - ./airflow/logs:/opt/airflow/logs
    - ./dags/data_gcp_dbt:/opt/airflow/data_gcp_dbt
    - ~/.config/gcloud:/root/.config/gcloud
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    restart: "unless-stopped"

  airflow-apiserver:
    image: airflow-custom-image:latest
    <<: *airflow-common
    command: api-server
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://airflow-apiserver:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: "unless-stopped"
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    image: airflow-custom-image:latest
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "http://airflow-apiserver:8080"' ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: "unless-stopped"
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-dag-processor:
    image: airflow-custom-image:latest
    <<: *airflow-common
    command: dag-processor
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type DagProcessorJob --hostname "http://airflow-apiserver:8080"']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    image: airflow-custom-image:latest
    <<: *airflow-common
    command: "airflow db migrate"
    environment:
      <<: *airflow-common-env
    restart: "no"
    depends_on:
      <<: *airflow-common-depends-on
      postgres:
        condition: service_healthy
