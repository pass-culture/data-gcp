[project]
name = "data-gcp"
version = "0.1.1"
description = "Data Engineering GCP Project for Pass Culture"
requires-python = ">=3.10,<3.13"

[dependency-groups]
airflow = [
  "apache-airflow[google,gcp]==2.9.3",
  "apache-airflow-providers-ssh>=4.0.1",
  "dbt-core==1.8.6",
  "dbt-bigquery==1.8.1",
  "elementary-data[bigquery]==0.18.1",
  "flask-openid>=1.3.1",
  "flask-oidc>=2.2.2",
]
dbt = [
  "dbt-core==1.8.6",
  "dbt-bigquery==1.8.1",
  "dbt-metabase==1.4.2",
  "dbt-score==0.7.1",
  "dbt-coverage==0.3.8",
]
docs = [
    "mkdocs-material==9.5.42",
    "mkdocs-awesome-pages-plugin==2.9.3",
    "mkdocs-include-markdown-plugin",
    "pandas==2.2.3",
    "tabulate==0.9.0",
]
dev = [
    "pytest>=7.4.4",
    "pytest-cov>=5.0.0",
    "mock>=4.0.2",
    "ruff==0.5.7",
    "typer==0.12.3",
    "pre-commit~=2.21",
    "shandy-sqlfmt[jinjafmt]==0.23.2",
    "sqlfluff==3.1.1",
    "sqlfluff-templater-dbt==3.1.1",
]

[tool.uv]
python = "3.12"
default-groups = ["airflow", "dbt", 'dev', 'docs']


## ruff
[tool.ruff]
target-version = 'py312'

lint.select = []
# TARGET : lint.select = [
#     "E",      # pycodestyle
#     "W",      # pycodestyle
#     "F",      # Pyflakes
#     "B",      # flake8-bugbear
#     "C4",     # flake8-comprehensions
#     "I",      # isort
#     "SIM",    # flake8-simplify
#     "TCH",    # flake8-type-checking
#     "TID",    # flake8-tidy-imports
#     "UP",     # pyupgrade
#     "PT",     # flake8-pytest-style
#     "RUF",    # Ruff-specific rules
#     "FBT001", # flake8-boolean-trap
# ]

[tool.ruff.lint.pydocstyle]
# Automatically disable rules that are incompatible with Google docstring convention
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
# Pydantic needs to be able to evaluate types at runtime
# see https://pypi.org/project/flake8-type-checking/ for flake8-type-checking documentation
# see https://beta.ruff.rs/docs/settings/#flake8-type-checking-runtime-evaluated-base-classes for ruff documentation
